# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# [START cloudbuild]
steps:

# This step installs GO dependencies
- name: 'gcr.io/cloud-builders/go' 
  id: Install Go
  args: ['install', '.']
  env: ['PROJECT_ROOT=${_PROJECT_NAME}']

# This step compiles the app
- name: 'gcr.io/cloud-builders/go'
  id: Build
  args: ['build', '${_PROJECT_NAME}']
  env: ['PROJECT_ROOT=${_PROJECT_NAME}']

# This step tests the app
- name: 'gcr.io/cloud-builders/go'
  id: Test
  args: ['test']
  env: ['PROJECT_ROOT=${_PROJECT_NAME}']

# This step creates the docker image
- name: 'gcr.io/cloud-builders/docker'
  id: Container Build 
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/${_PROJECT_NAME}:$SHORT_SHA'
  - '.'

# This step pushes the docker image to teh registry
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/${_PROJECT_NAME}:$SHORT_SHA'
  env:
  - 'PROJECT_ID=$PROJECT_ID'

  # This step clones the hello-cloudbuild-env repository
- name: 'gcr.io/cloud-builders/gcloud'
  id: Clone env repository
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    gcloud source repos clone ${_PROJECT_NAME}-env && \
    cd ${_PROJECT_NAME}-env && \
    git checkout candidate && \
    git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')

# This step generates the new manifest
- name: 'gcr.io/cloud-builders/gcloud'
  id: Generate manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     ls && \
     sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g;s/_PROJECT_NAME/${_PROJECT_NAME}/g" kubernetes.yaml.tpl | \
     sed "s/COMMIT_SHA/${SHORT_SHA}/g" > ${_PROJECT_NAME}-env/kubernetes.yaml && \ 
     cat ${_PROJECT_NAME}-env/kubernetes.yaml

# This step pushes the manifest back to hello-cloudbuild-env
- name: 'gcr.io/cloud-builders/gcloud'
  id: Push manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    set -x && \
    cd ${_PROJECT_NAME}-env && \
    git add kubernetes.yaml && \
    git commit -m "Deploying image gcr.io/${PROJECT_ID}/${_PROJECT_NAME}:${SHORT_SHA}
    Built from commit ${COMMIT_SHA} of repository ${_PROJECT_NAME}
    Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
    git push origin candidate
# [END cloudbuild]
